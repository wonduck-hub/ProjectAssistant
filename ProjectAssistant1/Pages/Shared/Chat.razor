@page "/Chat"

@using Microsoft.AspNetCore.SignalR.Client

@inject IJSRuntime JSRuntime

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IWorkspaceRepositoryAsync WorkspaceRepository
@inject IWorkspaceUserRepository WorkspaceUserRepository
@inject NavigationManager NavigationManager

<h1>Chat</h1>

<br />

<ul id="messagesList">
    @foreach (var message in messages)
    {
        <li>@message</li>
    }
</ul>

@code {
    private HubConnection hubConnection; // SignalR 허브 연결용
    private List<string> messages = new List<string>();
    private string userInput;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder() // 허브 연결
            .WithUrl(NavigationManager.ToAbsoluteUri("/chathub"))
            .Build();

        // 서버로 부터 받은 메시지 핸들러 등록
        hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            var encodedMsg = $"{user}: {message}";
            messages.Add(encodedMsg);
            StateHasChanged();
        });

        await hubConnection.StartAsync();
    }

    Task SendMessage()
    {
        return hubConnection.SendAsync("SendMessage", "User", userInput);
    }

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;
}