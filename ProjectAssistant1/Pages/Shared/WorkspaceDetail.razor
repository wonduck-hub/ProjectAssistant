@page "/WorkspaceDetail/{workspaceId:int}"

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IWorkspaceRepositoryAsync WorkspaceRepository
@inject NavigationManager NavigationManager

@if(workspace == null)
{
    <h3>Error</h3>
}
else
{
    <h3>@workspace.Name</h3>
}

<hr />

<div class="dropdown">
    <button>드롭다운 메뉴</button>
    <div class="dropdown-content">
        <ul>
            <li><a href="#">링크 1</a></li>
            <li><a href="#">링크 2</a></li>
            <li><a href="#">링크 3</a></li>
        </ul>
    </div>
</div>


@code {
    [Parameter]
    public int workspaceId { get; set; }

    public Workspace workspace;


    AuthenticationState authState;
    ClaimsPrincipal user;

    protected override async Task OnInitializedAsync()
    {
        // AuthenticationStateProvider.GetAuthenticationStateAsync() 메서드는
        // 현재 인증 상태를 나타내는 AuthenticationState 객체를 비동기적으로 반환하는 메서드다.
        authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        user = authState.User;

        workspace = await WorkspaceRepository.GetWorkspaceByIdAsync(workspaceId);
    }

}
